SchemataMutationMapping(
    source: "\n        let b = a == 5\n        let e = a != 1\n        let c = a >= 4\n        let d = a <= 10\n        let f = a < 5\n        let g = a > 5\n\n        if a == 10 {\n            return \"hello\"\n        }\n\n        return a == 9 ? \"goodbye\" : \"what\"",
schemata: [Schemata(
    id: "file_RelationalOperatorReplacement_3_19_76",
    filePath: "/path/to/file",
    mutationOperatorId: .ror,
    syntaxMutation: "\n        let b = a != 5\n        let e = a != 1\n        let c = a >= 4\n        let d = a <= 10\n        let f = a < 5\n        let g = a > 5\n\n        if a == 10 {\n            return \"hello\"\n        }\n\n        return a == 9 ? \"goodbye\" : \"what\"",
    position: MutationPosition(
    utf8Offset: 76,
    line: 3,
    column: 19
),
    snapshot: MutationOperator.Snapshot(
    before: "==",
    after: "!=",
    description: "changed == to !="
)
), Schemata(
    id: "file_RelationalOperatorReplacement_4_19_99",
    filePath: "/path/to/file",
    mutationOperatorId: .ror,
    syntaxMutation: "\n        let b = a == 5\n        let e = a == 1\n        let c = a >= 4\n        let d = a <= 10\n        let f = a < 5\n        let g = a > 5\n\n        if a == 10 {\n            return \"hello\"\n        }\n\n        return a == 9 ? \"goodbye\" : \"what\"",
    position: MutationPosition(
    utf8Offset: 99,
    line: 4,
    column: 19
),
    snapshot: MutationOperator.Snapshot(
    before: "!=",
    after: "==",
    description: "changed != to =="
)
), Schemata(
    id: "file_RelationalOperatorReplacement_5_19_122",
    filePath: "/path/to/file",
    mutationOperatorId: .ror,
    syntaxMutation: "\n        let b = a == 5\n        let e = a != 1\n        let c = a <= 4\n        let d = a <= 10\n        let f = a < 5\n        let g = a > 5\n\n        if a == 10 {\n            return \"hello\"\n        }\n\n        return a == 9 ? \"goodbye\" : \"what\"",
    position: MutationPosition(
    utf8Offset: 122,
    line: 5,
    column: 19
),
    snapshot: MutationOperator.Snapshot(
    before: ">=",
    after: "<=",
    description: "changed >= to <="
)
), Schemata(
    id: "file_RelationalOperatorReplacement_6_19_145",
    filePath: "/path/to/file",
    mutationOperatorId: .ror,
    syntaxMutation: "\n        let b = a == 5\n        let e = a != 1\n        let c = a >= 4\n        let d = a >= 10\n        let f = a < 5\n        let g = a > 5\n\n        if a == 10 {\n            return \"hello\"\n        }\n\n        return a == 9 ? \"goodbye\" : \"what\"",
    position: MutationPosition(
    utf8Offset: 145,
    line: 6,
    column: 19
),
    snapshot: MutationOperator.Snapshot(
    before: "<=",
    after: ">=",
    description: "changed <= to >="
)
), Schemata(
    id: "file_RelationalOperatorReplacement_7_19_169",
    filePath: "/path/to/file",
    mutationOperatorId: .ror,
    syntaxMutation: "\n        let b = a == 5\n        let e = a != 1\n        let c = a >= 4\n        let d = a <= 10\n        let f = a > 5\n        let g = a > 5\n\n        if a == 10 {\n            return \"hello\"\n        }\n\n        return a == 9 ? \"goodbye\" : \"what\"",
    position: MutationPosition(
    utf8Offset: 169,
    line: 7,
    column: 19
),
    snapshot: MutationOperator.Snapshot(
    before: "<",
    after: ">",
    description: "changed < to >"
)
), Schemata(
    id: "file_RelationalOperatorReplacement_8_19_191",
    filePath: "/path/to/file",
    mutationOperatorId: .ror,
    syntaxMutation: "\n        let b = a == 5\n        let e = a != 1\n        let c = a >= 4\n        let d = a <= 10\n        let f = a < 5\n        let g = a < 5\n\n        if a == 10 {\n            return \"hello\"\n        }\n\n        return a == 9 ? \"goodbye\" : \"what\"",
    position: MutationPosition(
    utf8Offset: 191,
    line: 8,
    column: 19
),
    snapshot: MutationOperator.Snapshot(
    before: ">",
    after: "<",
    description: "changed > to <"
)
), Schemata(
    id: "file_RelationalOperatorReplacement_10_14_209",
    filePath: "/path/to/file",
    mutationOperatorId: .ror,
    syntaxMutation: "\n        let b = a == 5\n        let e = a != 1\n        let c = a >= 4\n        let d = a <= 10\n        let f = a < 5\n        let g = a > 5\n\n        if a != 10 {\n            return \"hello\"\n        }\n\n        return a == 9 ? \"goodbye\" : \"what\"",
    position: MutationPosition(
    utf8Offset: 209,
    line: 10,
    column: 14
),
    snapshot: MutationOperator.Snapshot(
    before: "==",
    after: "!=",
    description: "changed == to !="
)
), Schemata(
    id: "file_RelationalOperatorReplacement_14_18_272",
    filePath: "/path/to/file",
    mutationOperatorId: .ror,
    syntaxMutation: "\n        let b = a == 5\n        let e = a != 1\n        let c = a >= 4\n        let d = a <= 10\n        let f = a < 5\n        let g = a > 5\n\n        if a == 10 {\n            return \"hello\"\n        }\n\n        return a != 9 ? \"goodbye\" : \"what\"",
    position: MutationPosition(
    utf8Offset: 272,
    line: 14,
    column: 18
),
    snapshot: MutationOperator.Snapshot(
    before: "==",
    after: "!=",
    description: "changed == to !="
)
)]source: "\n        let output = try callGit(\n            \"rev-parse\",\n            \"--is-bare-repository\",\n            failureMessage: \"Couldn’t test for bare repository\"\n        )\n\n        return output == \"true\"",
schemata: [Schemata(
    id: "file_RelationalOperatorReplacement_30_23_658",
    filePath: "/path/to/file",
    mutationOperatorId: .ror,
    syntaxMutation: "\n        let output = try callGit(\n            \"rev-parse\",\n            \"--is-bare-repository\",\n            failureMessage: \"Couldn’t test for bare repository\"\n        )\n\n        return output != \"true\"",
    position: MutationPosition(
    utf8Offset: 658,
    line: 30,
    column: 23
),
    snapshot: MutationOperator.Snapshot(
    before: "==",
    after: "!=",
    description: "changed == to !="
)
)]
)